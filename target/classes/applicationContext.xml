<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/task 
      	http://www.springframework.org/schema/task/spring-task-3.1.xsd 
  	  http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	<task:annotation-driven /> <!-- 定时器开关 -->

	<!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
	<aop:aspectj-autoproxy />
	<!-- <context:component-scan base-package="com.smart.power"/> -->
	<context:component-scan base-package="com.ssxt.dao.Impl" />
	<context:component-scan base-package="com.ssxt.service.Impl" />

	<context:component-scan base-package="com.ssxt.task" />

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>


	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
		destroy-method="close"> -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" 
		p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}" 
		p:username="${jdbc.username}" 
		p:password="${jdbc.password}">
	</bean>

	<!-- spring接管Hibernate的s-essionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	 
		<property name="mappingResources">
			<list>
				<value>com/ssxt/model/Groups.hbm.xml</value>
				<value>com/ssxt/model/StPptnR.hbm.xml</value>
				<value>com/ssxt/model/StcdType.hbm.xml</value>
				<value>com/ssxt/model/StStbprpB.hbm.xml</value>
				<value>com/ssxt/model/StPptnRNew.hbm.xml</value>
				<value>com/ssxt/model/StRvfcchB.hbm.xml</value>
				<value>com/ssxt/model/StRiverR.hbm.xml</value>
				<value>com/ssxt/model/StRsvrR.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>

				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- spring提供的hibernate工具包 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>




	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- <tx:advice id="txAdvice" transaction-manager="txManager"> -->
	<!-- <tx:attributes> -->
	<!-- <tx:method name="save*" propagation="REQUIRED" /> -->
	<!-- <tx:method name="add*" propagation="REQUIRED" /> -->
	<!-- <tx:method name="del*" propagation="REQUIRED" /> -->
	<!-- <tx:method name="update*" propagation="REQUIRED" /> -->
	<!-- <tx:method name="*" read-only="false" /> -->
	<!-- </tx:advice> -->

	<!-- <aop:config>对事务进行切面拦截 -->
	<!-- <aop:pointcut id="interceptorPointCuts" -->
	<!-- expression="execution(* com.ssxt.service.Impl..*.*(..))" /> -->
	<!-- <aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" 
		/> -->
	<!-- </aop:config> -->


	<!-- sping mvc 统一收集错误信息 -->
	<bean id="exceptionResolver" class="com.ssxt.common.tools.MyExceptionHandler" />


	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="1000000" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true" />

	<!-- <bean id="myTaskXml" class="com.ssxt.timer.MyTaskXml"></bean> <bean 
		id="timeDitail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
		<property name="targetObject" ref="myTaskXml"></property>指定任务类 <property 
		name="targetMethod"> </property>指定任务方法 </bean> -->
	<!-- <task:scheduled-tasks> -->
	<!-- 这里表示的是每隔五秒执行一次 -->
	<!-- <task:scheduled ref="myTaskXml" method="show" cron="*/5 * * * * ?" 
		/> <task:scheduled ref="myTaskXml" method="print" cron="*/10 * * * * ?"/> 
		</task:scheduled-tasks> -->

	<!-- 自动扫描的包名 -->
	<!-- <context:component-scan base-package="com.spring.task" /> -->
	<!-- <bean id="transactionManager" -->
	<!-- class="org.springframework.orm.hibernate3.HibernateTransactionManager"> -->
	<!-- <property name="sessionFactory"> -->
	<!-- <ref bean="sessionFactory"/> -->
	<!-- </property> -->
	<!-- </bean> -->

	<!--p:mappingDirectoryLocations="classpath:/com/smart/domain" -->




</beans>
